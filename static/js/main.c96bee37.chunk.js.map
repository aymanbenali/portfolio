{"version":3,"sources":["theme.js","DialogCard.js","Card.js","Footer.js","DialogContact.js","home.js","App.js","serviceWorker.js","index.js","images/quoteWhite.png","images/Ayman.png"],"names":["font","Theme","size","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","createMuiTheme","palette","firestSalute","color","chips","div","marginLeft","withWhite","withoutWhite","orginize","description","grid","margin","mask","backgroundColor","borderRadius","text","fontFamily","button","textTransform","textAlign","jobs","borderStyle","borderColor","padding","typographyWhiteColor","typographyGreyColor","primary","light","main","dark","contrastText","secondary","Transition","React","forwardRef","props","ref","Slide","direction","DialogProject","state","handle","data","screenSize","name","images","technologies","descriptions","split","pop","imgSize","Dialog","fullScreen","open","onClose","TransitionComponent","style","AppBar","Toolbar","IconButton","edge","onClick","aria-label","Typography","variant","marginTop","marginRight","Grid","container","justify","alignItems","item","xs","alt","src","theme","Container","maxWidth","map","generateChips","useStyles","makeStyles","root","spacing","gridMobile","Width","media","MediaCard","classes","projects","JsonData","setOpen","currentData","setcurrentData","handleClose","project","className","Card","CardActionArea","CardMedia","image","title","CardContent","noWrap","gutterBottom","component","fab","absolute","position","bottom","right","Footer","quoteWhite","Tooltip","href","Fab","generateLiks","Bottom","DialogContact","TextField","id","label","multiline","rows","Button","borderWidth","withTitle","isWhite","withWhithe","chip","Chip","avatar","Avatar","charAt","clickable","FirstSalute","MyDescription","myDescription","about","MyPhoto","roundedSize","Technologies","descriptionText","Jobs","job","company","time","desc","Header","App","console","log","top","left","exact","path","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.c96bee37.chunk.js","sourcesContent":["import { createMuiTheme }  from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\n\nconst font =  \"'Roboto Condensed', sans-serif\";\n\n\nconst useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({ width: undefined, height: undefined });\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n\n\nconst Theme = () => {\n  const computerDefaultSize = 1246;\n  const size = useWindowSize();\n  return createMuiTheme({\n    palette: {\n      firestSalute: {\n        color: '#7510F7'\n      },\n      chips:{\n        div: { marginLeft: '20px'},\n        withWhite: {color: '#FFFFFF'},\n        withoutWhite: {color: '#141C3A'},\n        orginize: {\n          marginLeft: 5,\n          color:'#FFFFFF',\n        }\n      },\n      description:{\n        grid:{margin: size.width < computerDefaultSize ? '20%' : '7%'},\n        mask:{\n          backgroundColor: '#7510F7',\n          height: '105%',\n          borderRadius: '25px',\n          width: size.width < computerDefaultSize ? '120%' : 'auto'\n        },\n        text: {\n          fontFamily: font,\n          color: '#F8F8F8',\n          button: {\n            textTransform: \"none\"\n          },\n          margin: '20px',\n          textAlign: 'center'\n          }\n      },\n      jobs: {\n        mask: {\n          borderStyle: 'solid',\n          borderColor: '#141C3A',\n          borderRadius: '25px',\n          margin: '20px',\n          padding: '20px'\n        }\n      },\n      typographyWhiteColor: {\n        fontFamily: font,\n        color: '#141C3A',\n        button: {\n          textTransform: \"none\"\n        },\n        marginLeft: '20px'\n      },\n      mask: {\n        borderStyle: 'solid',\n        borderColor: '#7510F7',\n        height: '105%',\n        borderRadius: '25px',\n      },\n      typographyGreyColor: {\n        fontFamily: font,\n        color: '#3A4756',\n        button: {\n          textTransform: \"none\"\n        },\n      },\n      primary: {\n        light: '#757ce8',\n        main: '#3f50b5',\n        dark: '#002884',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n  });\n}\n\nexport default Theme;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport { generateChips } from './home.js';\nimport Slide from '@material-ui/core/Slide';\nimport Grid from '@material-ui/core/Grid';\nimport theme from './theme'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DialogProject = (props) => {\n  const {state, handle, data, screenSize} = props;\n  const { description, name, images, technologies } = data;\n  if (!description) return <div></div>;\n  const descriptions = description.split('.');\n  descriptions.pop();\n  const imgSize = screenSize.width > 1246 ? 300 : 280\n\n  return (\n    <Dialog\n      fullScreen\n      open={state}\n      onClose={handle}\n      TransitionComponent={Transition}\n    >\n      <div style={{backgroundColor: '#FFFFFF'}}>\n        <AppBar>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handle} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\">\n              {name}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div style={{\n            borderStyle: 'solid',\n            borderColor: '#7510F7',\n            borderRadius: '25px',\n            marginTop: '100px',\n            marginLeft: '20px',\n            marginRight: '20px',\n            padding: '30px'\n          }}>\n          <Grid container direction={screenSize.width < 1246 ? \"column\" : ''} justify=\"center\" alignItems=\"stretch\" >\n            <Grid item xs={3}>\n              <img alt=\"complex\" src={images[0]} width={imgSize} height='200' />\n            </Grid>\n            <Grid item>\n              <Typography style={theme().palette.typographyWhiteColor}> {name} </Typography>\n              <Container maxWidth=\"la\">\n                {\n                  descriptions.map(description => <Typography style={theme().palette.typographyWhiteColor}> ✓{description}. </Typography>)\n                }\n              </Container>\n            </Grid>\n          </Grid>\n          <br />\n          {generateChips(technologies)}\n        </div>          \n      </div>\n    </Dialog>\n  )\n}\n\nexport default DialogProject;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nimport Dialog from './DialogCard';\n\nimport JsonData from './data.json';\n\nconst useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({ width: undefined, height: undefined });\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderStyle: 'solid',\n    borderRadius: '20px',\n    borderColor: '#7510F7'\n  },\n  grid: {\n    margin: theme.spacing(3, 4),\n    maxWidth: 345\n  },\n  gridMobile: {\n    margin: theme.spacing(3, 0),\n    maxWidth: '100%',\n    Width: 'auto'\n  },\n  media: {\n    height: 140,\n  },\n}));\n\n\n\nexport default function MediaCard() {\n  const size = useWindowSize();\n  const classes = useStyles();\n  const { projects } = JsonData;\n  const [open, setOpen] = React.useState(false);\n  const [currentData, setcurrentData] = React.useState(false);\n\n  const handleClickOpen = (data) => {\n    setcurrentData(data);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Grid container>\n      {projects.map(project => {\n        const { description, name, images } = project;\n        return(\n          <Grid item className={size.width > 1246 ? classes.grid : classes.gridMobile}>\n            <Dialog state={open} handle={handleClose} data={currentData} screenSize={size}/>\n            <Card className={classes.root}>\n              <CardActionArea onClick={() => handleClickOpen(project)}>\n                <CardMedia\n                  className={classes.media}\n                  image={images[0]}\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography noWrap='true' gutterBottom variant=\"h5\" component=\"h2\">\n                    { name }\n                  </Typography>\n                  <Typography noWrap='true' variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {description}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        )\n      })}\n    </Grid>\n  )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport quoteWhite from './images/quoteWhite.png';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport FacebookIcon from '@material-ui/icons/Facebook';\n\nconst font =  \"'Roboto Condensed', sans-serif\";\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    margin: theme.spacing(2)\n  },\n  title: {\n\t fontFamily: font,\n\t  color: '#FFFFFF',\n\t  button: {\n\t    textTransform: \"none\"\n\t  },\n\t  textAlign: 'center'\n\t},\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n}));\n\nconst generateImage = () => {\n\treturn (\n\t  \t<div style={{marginLeft: '20%'}}>\n\t  \t\t<img src={quoteWhite} width='70%' height='70%' alt=''/>\n\t  \t</div>\n\t)\n}\n\nconst generateLiks = (classes) => {\n\treturn (\n\t\t<div>\n\t\t\t<Grid container justify=\"center\" alignItems=\"stretch\" >\n      \t\t<Grid item xs={3}>\n          \t\t<Tooltip title=\"Github\" aria-label=\"add\" href='https://github.com/aymanbenali'>\n\t\t        <Fab style={{color: '#7510F7'}} className={classes.fab}>\n\t\t          <GitHubIcon />\n\t\t        </Fab>\n\t\t      </Tooltip>\n\t\t      <Tooltip title=\"Github\" aria-label=\"add\" href='https://www.linkedin.com/in/ayman-benali'>\n\t\t        <Fab style={{color: '#7510F7'}} className={classes.fab}>\n\t\t          <LinkedInIcon />\n\t\t        </Fab>\n\t\t      </Tooltip>\n\t\t      <Tooltip title=\"Github\" aria-label=\"add\" href='https://www.facebook.com/ayman.benali.37'>\n\t\t        <Fab style={{color: '#7510F7'}} className={classes.fab}>\n\t\t          <FacebookIcon />\n\t\t        </Fab>\n\t\t      </Tooltip>\n      \t\t</Grid>\n  \t\t</Grid>\t\n  \t</div>\n\t)\n}\n\nconst Bottom = (classes) => {\n\treturn (\n\t\t<div className={classes.title}>\n\t\t\t<Typography variant='h6'>\n\t\t\t\tAyman Benali © 2020\n\t\t\t</Typography>\n\t\t</div>\n\t)\n}\n\nconst Footer = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div>\n\t      <Grid container justify=\"center\" alignItems=\"stretch\">\n\t      \t<Typography component=\"div\" style={{\n\t            backgroundColor: '#7510F7',\n\t            borderRadius: '25px',\n\t            padding: '25px'\n\t          }}>\n\t          \t{generateImage()}\n\t          \t{generateLiks(classes)}\n\t          \t{Bottom(classes)}\n\t\t    </Typography>\n\t      </Grid>\n\t    </div>\n\t)\n}\n\nexport default Footer;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Slide from '@material-ui/core/Slide';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport theme from './theme'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DialogContact = (props) => {\n  const {state, handle} = props; \n  return (\n    <Dialog\n      fullScreen\n      open={state}\n      onClose={handle}\n      TransitionComponent={Transition}\n    >\n      <div style={{backgroundColor: '#FFFFFF'}}>\n        <AppBar>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handle} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\">\n              Contact me\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div style={{\n            marginTop: '100px',\n            marginLeft: '20px',\n            marginRight: '20px',\n            padding: '30px'\n          }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant='h3' style={theme().palette.title}> Thanks for taking the time to reach out. How can I help you today?</Typography>\n            </Grid>\n            <Grid item xs={3} />\n            <Grid item xs={3}>\n              <TextField \n                id=\"outlined-secondary\"\n                label=\"Outlined secondary\"\n                variant=\"outlined\"\n                label=\"Name\" />\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                id=\"outlined-secondary\"\n                label=\"Outlined secondary\"\n                variant=\"outlined\"\n                label=\"Email\" />\n            </Grid>\n            <Grid item xs={3} />\n            <Grid item xs={3} />\n            <Grid item>\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Multiline\"\n                multiline\n                rows={14}\n                style={{width: '226%'}}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid container justify=\"center\" alignItems=\"stretch\" >\n              <Grid item xs={2} />\n              <Grid item xs={4}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  style={{borderStyle: 'dotted', borderWidth: '5px', borderRadius: '25px'}}\n                >\n                  Submit\n                </Button> \n              </Grid>\n            </Grid>\n          </Grid>\n          <br />\n        </div>          \n      </div>\n    </Dialog>\n  )\n};\n\nexport default DialogContact;\n","import React, { useState, useEffect } from 'react';\nimport { GreatThings } from 'moving-letters'\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport ReactRoundedImage from \"react-rounded-image\";\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nimport Theme from './theme';\nimport Card from './Card';\nimport Footer from './Footer';\nimport DialogContact from './DialogContact';\n\nimport MyPhoto from \"./images/Ayman.png\";\nimport './App.css';\nimport JsonData from './data.json';\n\nexport const generateChips = (chips, withTitle, isWhite) => {\n  const { withWhithe, withoutWhite, div, orginize } = Theme().palette.chips\n  return (\n    <div style={div}>\n      {withTitle ? <Typography style={Theme().palette.typographyGreyColor}> Technologies: </Typography> : ''}\n      <br />\n      <div>\n        {\n          chips.map(chip => {\n            return <Chip\n              avatar={\n                <Avatar style={{backgroundColor: `${chip.color}`}}>\n                  <p style={Theme().palette.typographyGreyColor}>{chip.name.charAt(0)}</p>\n                </Avatar>\n              }\n              label={<p style={ isWhite ? withWhithe : withoutWhite}>{chip.name}</p>}\n              clickable\n              style={orginize}\n              variant=\"outlined\"\n            />\n          })\n        }        \n      </div>\n    </div>\n  )\n};\n\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({ width: undefined, height: undefined });\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n\nconst FirstSalute = () => {\n  const name = `My name is Ayman Benali`;\n  return (\n    <div style={Theme().palette.firestSalute}>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\" >\n        <section>\n          <GreatThings text='Hello World 👋,' />\n          <GreatThings text={name} />\n          <GreatThings text='Data Scientist Jr & Full Stack Web Developer.' />\n        </section>\n      </Grid>\n    </div>\n  );\n};\n\nconst MyDescription = () => {\n  const myDescription = JsonData.about.description.split('.');\n  const { grid, mask, text } = Theme().palette.description;\n  myDescription.pop();\n  const computerDefaultSize = 1246;\n  const size = useWindowSize();\n  return (\n    <div>\n      <Grid container direction={size.width < computerDefaultSize ? \"column\" : ''} justify=\"center\" alignItems=\"stretch\" >\n        <Grid item xs={2} style={grid}>\n          <ReactRoundedImage image={MyPhoto} roundedSize=\"5\"/>\n        </Grid>\n        <Grid item xs={10}>\n          <Typography component=\"div\" style={mask}>\n            <br />\n              <Typography variant='h4' style={text}><b> Hi I'm Ayman, Nice To Meet You </b></Typography>\n            { \n              myDescription.map(item => {\n                return <Typography style={text}> {item}. </Typography>          \n              })\n            }\n            <Technologies />\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst Technologies = () => {\n  const technologies = JsonData.about.technologies;\n  return (\n    <div>\n      <grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n        <Typography style={Theme().palette.descriptionText}> here are some of the most technologies i work with: </Typography>\n        {generateChips(technologies, false, true)}\n      </grid>\n    </div>\n  )\n}\n\nconst Jobs = () => {\n  const jobs = JsonData.jobs;\n  return (\n    jobs.map(job => {\n    const { projects } = job;\n      return (\n        <div>\n        <br /><br />\n          <Grid container justify=\"center\" alignItems=\"stretch\" >\n            <Grid item xs={4}>\n              <Typography variant=\"h5\" style={Theme().palette.typographyWhiteColor} >{job.company}</Typography>\n            </Grid>\n            <Grid item xs={7} />\n            <Grid item xs={1}>\n              <Typography variant=\"h7\" style={Theme().palette.typographyGreyColor}>{job.time}</Typography>\n            </Grid>\n            <Grid container justify=\"center\" alignItems=\"stretch\" direction=\"column\">\n              <Typography variant=\"h7\" style={{marginLeft: '20px'}}>{job.position}</Typography>\n              {\n                projects.map(project => {\n                  const { description } = project;\n                  return (\n                    <div>\n                      {description.map(desc => {\n                          return (\n                            <div style={Theme().palette.jobs.mask}>\n                                <Typography style={Theme().palette.typographyGreyColor} variant=\"h6\">✓{desc}</Typography>\n                            </div>\n                          )\n                        })}\n                       {generateChips(project.technologies, false)} \n                    </div>\n                  )\n                })\n              }\n            </Grid>\n          </Grid>\n        </div>\n      )\n    })\n  )\n}\n\nconst Header = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div style={{marginTop: '20px'}}>\n      <DialogContact state={open} handle={handleClose}/>\n      <Grid container justify=\"center\" alignItems=\"stretch\" >\n        <Grid item xs={10} />\n        <Grid item xs={2}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{borderStyle: 'dotted', borderWidth: '5px', borderRadius: '25px'}}\n            onClick={handleClickOpen}\n          >\n            Say Hello\n          </Button>      \n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nconst App = () => {\n  console.log(Theme())\n  if (Theme()) return (\n    <div>\n      <Container maxWidth=\"la\">\n        <MuiThemeProvider>\n          <Header />\n          <FirstSalute />\n          <MyDescription />\n          <br /><br />\n          <Typography component=\"div\" style={Theme().palette.mask}>\n            <div style={{margin: '25px'}}>\n              <Typography variant=\"h4\" style={Theme().palette.title}>\n                Professional career\n              </Typography>\n              <Jobs />              \n            </div>\n          </Typography>\n            <br />\n          <Typography variant=\"h4\" style={Theme().palette.title}>\n            Projects\n          </Typography>  \n          <br />        \n          <Card />\n          <br />\n          <Footer />\n        </MuiThemeProvider>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './home';\n\nconst App = (props) => {\n  return (\n    <Router>\n      <div style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }}\n        >\n          <Switch>\n            <Route exact path=\"/portfolio\" component={Home} />\n          </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/quoteWhite.df1e2f2c.png\";","module.exports = __webpack_public_path__ + \"static/media/Ayman.bd533718.png\";"],"sourceRoot":""}