{"version":3,"sources":["images/quoteWhite.png","images/Ayman.png","Particles.js","theme.js","DialogE.js","Card.js","Footer.js","DialogContact.js","home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Particle","font","theme","createMuiTheme","palette","whiteColor","color","typographyWhiteColor","fontFamily","button","textTransform","marginLeft","descriptionText","margin","textAlign","typographyGreyColor","greyColor","title","primary","light","main","dark","contrastText","secondary","Transition","React","forwardRef","props","ref","Slide","direction","DialogLog","this","state","handle","data","screenSize","console","log","description","name","images","technologies","descriptions","split","pop","imgSize","width","Dialog","fullScreen","open","onClose","TransitionComponent","style","backgroundColor","AppBar","Toolbar","IconButton","edge","onClick","aria-label","Typography","variant","borderStyle","borderColor","borderRadius","marginTop","marginRight","padding","Grid","container","justify","alignItems","item","xs","alt","src","height","Container","maxWidth","map","generateChips","Component","useStyles","makeStyles","root","grid","spacing","gridMobile","media","MediaCard","size","useState","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","classes","projects","JsonData","setOpen","currentData","setcurrentData","handleClose","project","className","Card","CardActionArea","CardMedia","image","CardContent","noWrap","gutterBottom","component","fab","absolute","position","bottom","right","Footer","quoteWhite","Tooltip","href","Fab","generateLiks","Bottom","TextField","id","label","multiline","rows","Button","borderWidth","chips","withTitle","isWhite","chip","Chip","avatar","Avatar","charAt","clickable","FirstSalute","useTheme","text","MyDescription","myDescription","about","MyPhoto","roundedSize","Technologies","Jobs","jobs","job","company","time","desc","Header","App","top","left","exact","path","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6abda55a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quoteWhite.df1e2f2c.png\";","module.exports = __webpack_public_path__ + \"static/media/Ayman.bd533718.png\";","import React from 'react'; \nimport './App.css'; \nimport Particles from \"react-tsparticles\";   \n\nfunction Particle() { \n  return ( \n    <div className=\"App\"> \n      <Particles\n        id=\"tsparticles\"\n        options={{\n          \"background\": {\n            \"color\": {\n              \"value\": \"#00b4d8\"\n            },\n            \"image\": \"\",\n            \"position\": \"50% 50%\",\n            \"repeat\": \"no-repeat\",\n            \"size\": \"cover\",\n            \"opacity\": 1\n          },\n          \"backgroundMask\": {\n            \"cover\": {\n              \"color\": {\n                \"value\": \"#0d47a1\"\n              },\n              \"opacity\": 1\n            },\n            \"enable\": false\n          },\n          \"detectRetina\": true,\n          \"fpsLimit\": 60,\n          \"infection\": {\n            \"cure\": false,\n            \"delay\": 0,\n            \"enable\": false,\n            \"infections\": 0,\n            \"stages\": []\n          },\n          \"interactivity\": {\n            \"detectsOn\": \"canvas\",\n            \"events\": {\n              \"onClick\": {\n                \"enable\": false,\n                \"mode\": \"push\"\n              },\n              \"onDiv\": {\n                \"ids\": [],\n                \"enable\": false,\n                \"mode\": [],\n                \"type\": \"circle\"\n              },\n              \"onHover\": {\n                \"enable\": true,\n                \"mode\": \"grab\",\n                \"parallax\": {\n                  \"enable\": true,\n                  \"force\": 60,\n                  \"smooth\": 10\n                }\n              },\n              \"resize\": true\n            },\n            \"modes\": {\n              \"attract\": {\n                \"distance\": 200,\n                \"duration\": 0.4,\n                \"speed\": 1\n              },\n              \"bubble\": {\n                \"distance\": 400,\n                \"duration\": 2,\n                \"opacity\": 0.8,\n                \"size\": 40\n              },\n              \"connect\": {\n                \"distance\": 80,\n                \"links\": {\n                  \"opacity\": 0.5\n                },\n                \"radius\": 60\n              },\n              \"grab\": {\n                \"distance\": 400,\n                \"links\": {\n                  \"opacity\": 1\n                }\n              },\n              \"push\": {\n                \"quantity\": 4\n              },\n              \"remove\": {\n                \"quantity\": 2\n              },\n              \"repulse\": {\n                \"distance\": 200,\n                \"duration\": 0.4,\n                \"speed\": 1\n              },\n              \"slow\": {\n                \"factor\": 3,\n                \"radius\": 200\n              },\n              \"trail\": {\n                \"delay\": 1,\n                \"quantity\": 1\n              }\n            }\n          },\n          \"particles\": {\n            \"collisions\": {\n              \"enable\": false,\n              \"mode\": \"bounce\"\n            },\n            \"color\": {\n              \"value\": \"#F7F5BF\",\n              \"animation\": {\n                \"enable\": false,\n                \"speed\": 1,\n                \"sync\": true\n              }\n            },\n            \"links\": {\n              \"blink\": false,\n              \"color\": {\n                \"value\": \"#F7F5BF\"\n              },\n              \"consent\": false,\n              \"distance\": 150,\n              \"enable\": true,\n              \"opacity\": 0.4,\n              \"shadow\": {\n                \"blur\": 5,\n                \"color\": {\n                  \"value\": \"#00ff00\"\n                },\n                \"enable\": false\n              },\n              \"triangles\": {\n                \"enable\": false\n              },\n              \"width\": 1,\n              \"warp\": false\n            },\n            \"move\": {\n              \"angle\": 90,\n              \"attract\": {\n                \"enable\": false,\n                \"rotate\": {\n                  \"x\": 600,\n                  \"y\": 1200\n                }\n              },\n              \"direction\": \"none\",\n              \"enable\": true,\n              \"noise\": {\n                \"delay\": {\n                  \"random\": {\n                    \"enable\": false,\n                    \"minimumValue\": 0\n                  },\n                  \"value\": 0\n                },\n                \"enable\": false\n              },\n              \"outMode\": \"out\",\n              \"random\": false,\n              \"speed\": 2,\n              \"straight\": false,\n              \"trail\": {\n                \"enable\": false,\n                \"length\": 10,\n                \"fillColor\": {\n                  \"value\": \"#000000\"\n                }\n              },\n              \"vibrate\": false,\n              \"warp\": false\n            },\n            \"number\": {\n              \"density\": {\n                \"enable\": true,\n                \"area\": 800,\n                \"factor\": 1000\n              },\n              \"limit\": 0,\n              \"value\": 100\n            },\n            \"opacity\": {\n              \"animation\": {\n                \"enable\": true,\n                \"minimumValue\": 0.1,\n                \"speed\": 3,\n                \"sync\": false\n              },\n              \"random\": {\n                \"enable\": true,\n                \"minimumValue\": 1\n              },\n              \"value\": 0.5\n            },\n            \"rotate\": {\n              \"animation\": {\n                \"enable\": false,\n                \"speed\": 0,\n                \"sync\": false\n              },\n              \"direction\": \"clockwise\",\n              \"path\": false,\n              \"random\": false,\n              \"value\": 0\n            },\n            \"shadow\": {\n              \"blur\": 0,\n              \"color\": {\n                \"value\": \"#000000\"\n              },\n              \"enable\": false,\n              \"offset\": {\n                \"x\": 0,\n                \"y\": 0\n              }\n            },\n            \"shape\": {\n              \"options\": {\n                \"polygon\": {\n                  \"nb_sides\": 5\n                },\n                \"star\": {\n                  \"nb_sides\": 5\n                },\n                \"image\": {\n                  \"src\": \"https://cdn.matteobruni.it/images/particles/github.svg\",\n                  \"width\": 100,\n                  \"height\": 100\n                },\n                \"images\": {\n                  \"src\": \"https://cdn.matteobruni.it/images/particles/github.svg\",\n                  \"width\": 100,\n                  \"height\": 100\n                }\n              },\n              \"type\": \"circle\"\n            },\n            \"size\": {\n              \"animation\": {\n                \"destroy\": \"none\",\n                \"enable\": true,\n                \"minimumValue\": 0.1,\n                \"speed\": 20,\n                \"startValue\": \"max\",\n                \"sync\": false\n              },\n              \"random\": {\n                \"enable\": true,\n                \"minimumValue\": 1\n              },\n              \"value\": 10\n            },\n            \"stroke\": {\n              \"width\": 0,\n              \"color\": {\n                \"value\": \"#000000\",\n                \"animation\": {\n                  \"enable\": false,\n                  \"speed\": 1,\n                  \"sync\": true\n                }\n              }\n            },\n            \"twinkle\": {\n              \"lines\": {\n                \"enable\": false,\n                \"frequency\": 0.05,\n                \"opacity\": 1\n              },\n              \"particles\": {\n                \"enable\": false,\n                \"frequency\": 0.05,\n                \"opacity\": 1\n              }\n            }\n          },\n          \"pauseOnBlur\": true\n        }}\n      />\n\n    </div> \n  ); \n} \n   \nexport default Particle; ","import { createMuiTheme }  from '@material-ui/core/styles';\nconst font =  \"'Roboto Condensed', sans-serif\";\nconst theme = createMuiTheme({\n  palette: {\n    whiteColor: {\n      color: '#F8F8F8'\n    },\n    typographyWhiteColor: {\n      fontFamily: font,\n      color: '#141C3A',\n      button: {\n        textTransform: \"none\"\n      },\n      marginLeft: '20px'\n    },\n    descriptionText: {\n      fontFamily: font,\n      color: '#F8F8F8',\n      button: {\n        textTransform: \"none\"\n      },\n      margin: '20px',\n      textAlign: 'center'\n    },\n    typographyGreyColor: {\n      fontFamily: font,\n      color: '#3A4756',\n      button: {\n        textTransform: \"none\"\n      },\n    },\n    greyColor: {\n    \tcolor: '#3A4756',\n    },\n    title: {\n\t fontFamily: font,\n      color: '#7510F7',\n      button: {\n        textTransform: \"none\"\n      },\n      textAlign: 'center'\n    },\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\nexport default theme\n","import React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport { generateChips } from './home.js';\nimport Slide from '@material-ui/core/Slide';\nimport Grid from '@material-ui/core/Grid';\nimport theme from './theme'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default class DialogLog extends React.Component {\n  render() {\n    const {state, handle, data, screenSize} = this.props;\n    console.log(screenSize)\n    const { description, name, images, technologies } = data;\n    if (!description) return <div></div>;\n    const descriptions = description.split('.');\n    descriptions.pop();\n    const imgSize = screenSize.width > 1246 ? 300 : 280\n\n    return (\n      <Dialog\n        fullScreen\n        open={state}\n        onClose={handle}\n        TransitionComponent={Transition}\n      >\n        <div style={{backgroundColor: '#FFFFFF'}}>\n          <AppBar>\n            <Toolbar>\n              <IconButton edge=\"start\" color=\"inherit\" onClick={handle} aria-label=\"close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\">\n                {name}\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <div style={{\n              borderStyle: 'solid',\n              borderColor: '#7510F7',\n              borderRadius: '25px',\n              marginTop: '100px',\n              marginLeft: '20px',\n              marginRight: '20px',\n              padding: '30px'\n            }}>\n            <Grid container direction={screenSize.width < 1246 ? \"column\" : ''} justify=\"center\" alignItems=\"stretch\" >\n              <Grid item xs={3}>\n                <img alt=\"complex\" src={images[0]} width={imgSize} height='200' />\n              </Grid>\n              <Grid item>\n                <Typography style={theme.palette.typographyWhiteColor}> {name} </Typography>\n                <Container maxWidth=\"la\">\n                  {\n                    descriptions.map(description => <Typography style={theme.palette.typographyWhiteColor}> ✓{description}. </Typography>)\n                  }\n                </Container>\n              </Grid>\n            </Grid>\n            <br />\n            {generateChips(technologies)}\n          </div>          \n        </div>\n      </Dialog>\n    )\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport Dialog from './DialogE';\n\nimport JsonData from './data.json';\n\nconst useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({ width: undefined, height: undefined });\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    borderStyle: 'solid',\n    borderRadius: '20px',\n    borderColor: '#7510F7'\n  },\n  grid: {\n    margin: theme.spacing(3, 3),\n  },\n  gridMobile: {\n    margin: theme.spacing(3, 0),\n    maxWidth: 330\n  },\n  media: {\n    height: 140,\n  },\n}));\n\n\n\nexport default function MediaCard() {\n  const size = useWindowSize();\n  const classes = useStyles();\n  const { projects } = JsonData;\n  const [open, setOpen] = React.useState(false);\n  const [currentData, setcurrentData] = React.useState(false);\n\n  const handleClickOpen = (data) => {\n    setcurrentData(data);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Grid container>\n      {projects.map(project => {\n        const { description, name, images } = project;\n        return(\n          <Grid item className={size.width > 1246 ? classes.grid : classes.gridMobile}>\n            <Dialog state={open} handle={handleClose} data={currentData} screenSize={size}/>\n            <Card className={classes.root}>\n              <CardActionArea onClick={() => handleClickOpen(project)}>\n                <CardMedia\n                  className={classes.media}\n                  image={images[0]}\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography noWrap='true' gutterBottom variant=\"h5\" component=\"h2\">\n                    { name }\n                  </Typography>\n                  <Typography noWrap='true' variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {description}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        )\n      })}\n    </Grid>\n  )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport quoteWhite from './images/quoteWhite.png';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport FacebookIcon from '@material-ui/icons/Facebook';\n\nconst font =  \"'Roboto Condensed', sans-serif\";\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    margin: theme.spacing(2)\n  },\n  title: {\n\t fontFamily: font,\n\t  color: '#FFFFFF',\n\t  button: {\n\t    textTransform: \"none\"\n\t  },\n\t  textAlign: 'center'\n\t},\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n}));\n\nconst generateImage = () => {\n\treturn (\n\t  \t<div style={{marginLeft: '20%'}}>\n\t  \t\t<img src={quoteWhite} width='70%' height='70%'/>\n\t  \t</div>\n\t)\n}\n\nconst generateLiks = (classes) => {\n\treturn (\n\t\t<div>\n\t\t\t<Grid container justify=\"center\" alignItems=\"stretch\" >\n      \t\t<Grid item xs={3}>\n          \t\t<Tooltip title=\"Github\" aria-label=\"add\" href='https://github.com/aymanbenali'>\n\t\t        <Fab style={{color: '#7510F7'}} className={classes.fab}>\n\t\t          <GitHubIcon />\n\t\t        </Fab>\n\t\t      </Tooltip>\n\t\t      <Tooltip title=\"Github\" aria-label=\"add\" href='https://www.linkedin.com/in/ayman-benali'>\n\t\t        <Fab style={{color: '#7510F7'}} className={classes.fab}>\n\t\t          <LinkedInIcon />\n\t\t        </Fab>\n\t\t      </Tooltip>\n\t\t      <Tooltip title=\"Github\" aria-label=\"add\" href='https://www.facebook.com/ayman.benali.37'>\n\t\t        <Fab style={{color: '#7510F7'}} className={classes.fab}>\n\t\t          <FacebookIcon />\n\t\t        </Fab>\n\t\t      </Tooltip>\n      \t\t</Grid>\n  \t\t</Grid>\t\n  \t</div>\n\t)\n}\n\nconst Bottom = (classes) => {\n\treturn (\n\t\t<div className={classes.title}>\n\t\t\t<Typography variant='h6'>\n\t\t\t\tAyman Benali © 2020\n\t\t\t</Typography>\n\t\t</div>\n\t)\n}\n\nconst Footer = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div>\n\t      <Grid container justify=\"center\" alignItems=\"stretch\">\n\t      \t<Typography component=\"div\" style={{\n\t            backgroundColor: '#7510F7',\n\t            borderRadius: '25px',\n\t            padding: '25px'\n\t          }}>\n\t          \t{generateImage()}\n\t          \t{generateLiks(classes)}\n\t          \t{Bottom(classes)}\n\t\t    </Typography>\n\t      </Grid>\n\t    </div>\n\t)\n}\n\nexport default Footer;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Slide from '@material-ui/core/Slide';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport theme from './theme'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default class DialogLog extends React.Component {\n  render() {\n    const {state, handle} = this.props;\n\n    return (\n      <Dialog\n        fullScreen\n        open={state}\n        onClose={handle}\n        TransitionComponent={Transition}\n      >\n        <div style={{backgroundColor: '#FFFFFF'}}>\n          <AppBar>\n            <Toolbar>\n              <IconButton edge=\"start\" color=\"inherit\" onClick={handle} aria-label=\"close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\">\n                Contact me\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <div style={{\n              marginTop: '100px',\n              marginLeft: '20px',\n              marginRight: '20px',\n              padding: '30px'\n            }}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Typography variant='h3' style={theme.palette.title}> Thanks for taking the time to reach out. How can I help you today?</Typography>\n              </Grid>\n              <Grid item xs={3} />\n              <Grid item xs={3}>\n                <TextField \n                  id=\"outlined-secondary\"\n                  label=\"Outlined secondary\"\n                  variant=\"outlined\"\n                  label=\"Name\" />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  id=\"outlined-secondary\"\n                  label=\"Outlined secondary\"\n                  variant=\"outlined\"\n                  label=\"Email\" />\n              </Grid>\n              <Grid item xs={3} />\n              <Grid item xs={3} />\n              <Grid item>\n                <TextField\n                  id=\"outlined-multiline-static\"\n                  label=\"Multiline\"\n                  multiline\n                  rows={14}\n                  style={{width: '226%'}}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid container justify=\"center\" alignItems=\"stretch\" >\n                <Grid item xs={2} />\n                <Grid item xs={4}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    style={{borderStyle: 'dotted', borderWidth: '5px', borderRadius: '25px'}}\n                  >\n                    Submit\n                  </Button> \n                </Grid>\n              </Grid>\n            </Grid>\n            <br />\n          </div>          \n        </div>\n      </Dialog>\n    )\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { GreatThings } from 'moving-letters'\n\nimport { useTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport ReactRoundedImage from \"react-rounded-image\";\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nimport theme from './theme';\nimport Card from './Card';\nimport Footer from './Footer';\nimport DialogContact from './DialogContact';\n\nimport MyPhoto from \"./images/Ayman.png\";\nimport './App.css';\nimport JsonData from './data.json';\n\nexport const generateChips = (chips, withTitle, isWhite) => {\n  return (\n    <div style={{marginLeft: '20px'}}>\n      {withTitle ? <Typography style={theme.palette.typographyGreyColor}> Technologies: </Typography> : ''}\n      <br />\n      <div>\n        {\n          chips.map(chip => {\n            return <Chip\n              avatar={\n                <Avatar style={{backgroundColor: `${chip.color}`}}>\n                  <p style={theme.palette.typographyGreyColor}>{chip.name.charAt(0)}</p>\n                </Avatar>\n              }\n              label={<p style={{color: isWhite ? '#FFFFFF': '#141C3A'}}>{chip.name}</p>}\n              clickable\n              style={{margin: theme.spacing(0.5), color:'#FFFFFF'}}\n              variant=\"outlined\"\n            />\n          })\n        }        \n      </div>\n    </div>\n  )\n};\n\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({ width: undefined, height: undefined });\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n\nconst FirstSalute = () => {\n  const theme = useTheme();\n  const name = `My name is Ayman Benali`;\n  return (\n    <div style={{color: '#7510F7'}} >\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\" >\n        <section>\n          <GreatThings text='Hello World 👋,' />\n          <GreatThings text={name} />\n          <GreatThings text='Data Scientist Jr & Full Stack Web Developer.' />\n        </section>\n      </Grid>\n    </div>\n  );\n};\n\nconst MyDescription = () => {\n  const myDescription = JsonData.about.description.split('.');\n  myDescription.pop();\n  const size = useWindowSize();\n  return (\n    <div>\n      <Grid container direction={size.width < 1246 ? \"column\" : ''} justify=\"center\" alignItems=\"stretch\" >\n        <Grid item xs={2} style={size.width < 1246 ? {margin: '20%'} : {marginTop: '7%'}}>\n          <ReactRoundedImage image={MyPhoto} roundedSize=\"5\"/>\n        </Grid>\n        <Grid item xs={10}>\n          <Typography component=\"div\" style={{\n            backgroundColor: '#7510F7',\n            height: '105%',\n            borderRadius: '25px',\n            width: size.width < 1246 ? '120%' : 'auto'\n          }}>\n            <br />\n              <Typography variant='h4' style={theme.palette.descriptionText}><b> Hi I'm Ayman, Nice To Meet You </b></Typography>\n            { \n              myDescription.map(item => {\n                return <Typography style={theme.palette.descriptionText}> {item}. </Typography>          \n              })\n            }\n            <Technologies />\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst Technologies = () => {\n  const technologies = JsonData.about.technologies;\n  return (\n    <div>\n      <grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n        <Typography style={theme.palette.descriptionText}> here are some of the most technologies i work with: </Typography>\n        {generateChips(technologies, false, true)}\n      </grid>\n    </div>\n  )\n}\n\nconst Jobs = () => {\n  const jobs = JsonData.jobs;\n  return (\n    jobs.map(job => {\n    const { projects } = job;\n      return (\n        <div>\n        <br /><br />\n          <Grid container justify=\"center\" alignItems=\"stretch\" >\n            <Grid item xs={4}>\n              <Typography variant=\"h5\" style={theme.palette.typographyWhiteColor} >{job.company}</Typography>\n            </Grid>\n            <Grid item xs={7} />\n            <Grid item xs={1}>\n              <Typography variant=\"h7\" style={theme.palette.typographyGreyColor}>{job.time}</Typography>\n            </Grid>\n            <Grid container justify=\"center\" alignItems=\"stretch\" direction=\"column\">\n              <Typography variant=\"h7\" style={{marginLeft: '20px'}}>{job.position}</Typography>\n              {\n                projects.map(project => {\n                  const { description } = project;\n                  console.log(description);\n                  return (\n                    <div>\n                      {description.map(desc => {\n                          return (\n                            <div style={{borderStyle: 'solid', borderColor: '#141C3A', borderRadius: '25px', margin: '20px', padding: '20px'}}>\n                                <Typography style={theme.palette.typographyGreyColor} variant=\"h6\">✓{desc}</Typography>\n                            </div>\n                          )\n                        })}\n                       {generateChips(project.technologies, true)} \n                    </div>\n                  )\n\n                })\n              }\n            </Grid>\n          </Grid>\n        </div>\n      )\n    })\n  )\n}\n\nconst Header = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div style={{marginTop: '20px'}}>\n      <DialogContact state={open} handle={handleClose}/>\n      <Grid container justify=\"center\" alignItems=\"stretch\" >\n        <Grid item xs={10} />\n        <Grid item xs={2}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{borderStyle: 'dotted', borderWidth: '5px', borderRadius: '25px'}}\n            onClick={handleClickOpen}\n          >\n            Say Hello\n          </Button>      \n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <div>\n      <Container maxWidth=\"la\">\n        <MuiThemeProvider theme={theme}>\n          <Header />\n          <FirstSalute />\n          <MyDescription />\n          <br /><br />\n          <Typography component=\"div\" style={{\n            borderStyle: 'solid',\n            borderColor: '#7510F7',\n            height: '105%',\n            borderRadius: '25px',\n          }}>\n            <div style={{margin: '25px'}}>\n              <Typography variant=\"h4\" style={theme.palette.title}>\n                Professional career\n              </Typography>\n              <Jobs />              \n            </div>\n          </Typography>\n            <br />\n          <Typography variant=\"h4\" style={theme.palette.title}>\n            Projects\n          </Typography>  \n          <br />        \n          <Card />\n          <br />\n          <Footer />\n        </MuiThemeProvider>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Particle from './Particles';\nimport Home from './home';\n\nconst App = (props) => {\n  return (\n    <Router>\n      <div style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }}\n        >\n          <Switch>\n            <Route exact path=\"/portfolio\" component={Home} />\n          </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}